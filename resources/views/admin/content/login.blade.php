<style>
.loader {
  background: #ffffff;
  width: 100%;
  height: 100%;
  line-height: 50px;
  text-align: center;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: helvetica, arial, sans-serif;
  font-weight: 900;
  letter-spacing: 0.2em;
  z-index: 9999999;
  display:none;
}
.loader span {
  position: absolute;
  width: 250px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #000;
  text-transform: uppercase;
}
.loader span::before,
.loader span::after {
  content: "";
  display: block;
  width: 15px;
  height: 15px;
  background: #ED5E29;
  position: absolute;
  animation: load 0.7s infinite alternate ease-in-out;
}
.loader span::before {
  top: 0;
}
.loader span::after {
  bottom: 0;
}
@keyframes load {
  0% {
    left: 0;
    height: 30px;
    width: 15px;
  }
  50% {
    height: 8px;
    width: 40px;
  }
  100% {
    left: 235px;
    height: 30px;
    width: 15px;
  }
}

</style>


<div class="loader" ><span>Loading...</span></div>
<div class="container-scroller">
    <div class="container-fluid page-body-wrapper full-page-wrapper">
      <div class="content-wrapper d-flex align-items-center auth px-0">
        <div class="row w-100 mx-0">
          <div class="col-lg-4 mx-auto">
            <div class="auth-form-light text-left py-5 px-4 px-sm-5">
              <div class="brand-logo">
                <img src="../../images/logo.svg" alt="logo">
              </div>
              <h4>Hello! let's get started </h4>
              <h6 class="font-weight-light">Sign in to continue.</h6>
              <form class="pt-3">
                  @if (setting('login_by_phone')=='1')
                  <div class="form-group">
                        <div class="input-group">
                            <input type="text" class="form-control phone" placeholder="Enter phone number" aria-label="Enter phone number">
                            <div class="input-group-append">
                                <button class="btn btn-sm btn-primary send_otp" type="button">Send otp</button>
                            </div>
                            </div>
                        </div>

                        <!-- This is the div where the otp fields are generated by Javascript -->
                        <div class="flex justify-center OTPInputAll" id="OTPInput" style="display: none">
                        </div>
                        <!-- Change this name attribute to mach your form submission parameters. Make sure you update the id in the javascript code if any changes are made to the id attribute -->
                        <input hidden id="otp" type="number" name="otp" value="">
                        <div class="my-2 d-flex justify-content-between align-items-center">
                            <div class="form-check">
                              <label class="form-check-label text-muted">
                                <input type="checkbox" class="form-check-input kip_signed">
                                Keep me signed in
                              </label>
                            </div>
                          </div>
                  @else
                    <div class="form-group">
                        <input type="email" class="form-control form-control-lg" id="exampleInputEmail1" placeholder="Email">
                    </div>
                    <div class="form-group">
                        <input type="password" class="form-control form-control-lg" id="exampleInputPassword1" placeholder="Password">
                    </div>
                    <div class="mt-3">
                        <a class="btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn" href="../../index.html">SIGN IN</a>
                    </div>
                    <div class="my-2 d-flex justify-content-between align-items-center">
                        <div class="form-check">
                          <label class="form-check-label text-muted">
                            <input type="checkbox" class="form-check-input">
                            Keep me signed in
                          </label>
                        </div>
                        <a href="#" class="auth-link text-black">Forgot password?</a>
                      </div>
                  @endif


                <div class="mb-2">
                  <button type="button" class="btn btn-block btn-facebook auth-form-btn verify_admin"> Verify admin</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <!-- content-wrapper ends -->
    </div>
    <!-- page-body-wrapper ends -->
  </div>

  @section('script')
  <script>
    /* This creates all the OTP input fields dynamically. Change the otp_length variable  to change the OTP Length */
const $otp_length = 6;

const element = document.getElementById('OTPInput');
for (let i = 0; i < $otp_length; i++) {
  let inputField = document.createElement('input'); // Creates a new input element
  inputField.className = "w-12 h-12 bg-gray-100 border-gray-100 outline-none focus:bg-gray-200 m-2 text-center rounded focus:border-blue-400 focus:shadow-outline";
  // Do individual OTP input styling here;
  inputField.style.cssText = "color: transparent; text-shadow: 0 0 0 gray;"; // Input field text styling. This css hides the text caret

  inputField.id = 'otp-field' + i; // Don't remove
  inputField.maxLength = 1; // Sets individual field length to 1 char
  element.appendChild(inputField); // Adds the input field to the parent div (OTPInput)
}

/*  This is for switching back and forth the input box for user experience */
const inputs = document.querySelectorAll('#OTPInput > *[id]');
for (let i = 0; i < inputs.length; i++) {
  inputs[i].addEventListener('keydown', function(event) {
    if (event.key === "Backspace") {

      if (inputs[i].value == '') {
        if (i != 0) {
          inputs[i - 1].focus();
        }
      } else {
        inputs[i].value = '';
      }

    } else if (event.key === "ArrowLeft" && i !== 0) {
      inputs[i - 1].focus();
    } else if (event.key === "ArrowRight" && i !== inputs.length - 1) {
      inputs[i + 1].focus();
    } else if (event.key != "ArrowLeft" && event.key != "ArrowRight") {
      inputs[i].setAttribute("type", "text");
      inputs[i].value = ''; // Bug Fix: allow user to change a random otp digit after pressing it
      setTimeout(function() {
        inputs[i].setAttribute("type", "password");
      }, 1000); // Hides the text after 1 sec
    }
  });
  inputs[i].addEventListener('input', function() {
    inputs[i].value = inputs[i].value.toUpperCase(); // Converts to Upper case. Remove .toUpperCase() if conversion isnt required.
    if (i === inputs.length - 1 && inputs[i].value !== '') {
      return true;
    } else if (inputs[i].value !== '') {
      inputs[i + 1].focus();
    }
  });

}
/*  This is to get the value on pressing the submit button
  *   In this example, I used a hidden input box to store the otp after compiling data from each input fields
  *   This hidden input will have a name attribute and all other single character fields won't have a name attribute
  *   This is to ensure that only this hidden input field will be submitted when you submit the form */

document.getElementById('otpSubmit').addEventListener("click", function() {
  const inputs = document.querySelectorAll('#OTPInput > *[id]');
  let compiledOtp = '';
  for (let i = 0; i < inputs.length; i++) {
    compiledOtp += inputs[i].value;
  }
  document.getElementById('otp').value = compiledOtp;
  return true;
});



    </script>

<script>
    $(document).ready(function(){

        $(".send_otp").click(function(){
            var phone = $(".phone").val();
            $(".loader").show();
            $.ajax({
            url: "{{ route('admin.login.phone') }}",
            data: {phone:phone,"_token":$(".token").val()},
            type: 'POST',
            success: function(data) {
                console.log(data.error);
                $(".loader").hide();
                if(data.error){
                    Toastify({
                        text: data.message,
                        duration: 3000,
                        newWindow: true,
                        close: true,
                        gravity: "top", // `top` or `bottom`
                        position: "right", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #ff0000, #96c93d)",
                        },
                        onClick: function(){} // Callback after click
                    }).showToast();

                    $(".OTPInputAll").hide();
                }else{
                    Toastify({
                        text: data.message,
                        duration: 3000,
                        newWindow: true,
                        close: true,
                        gravity: "top", // `top` or `bottom`
                        position: "right", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #00b09b, #96c93d)",
                        },
                        onClick: function(){} // Callback after click
                    }).showToast();
                    $(".OTPInputAll").show();
                }


            }
            });
        })
        $(".verify_admin").click(function(){
            var phone = $(".phone").val();
            const inputs = document.querySelectorAll('#OTPInput > *[id]');
            let compiledOtp = '';
            for (let i = 0; i < inputs.length; i++) {
                compiledOtp += inputs[i].value;
            }
            $(".loader").show();
            if(inputs.length==compiledOtp.length){
                $.ajax({
                    url: "{{ route('admin.login.phone.verify') }}",
                    data: {phone:phone,otp:compiledOtp,kip_signed:$(".kip_signed").prop('checked'),"_token":$(".token").val()},
                    type: 'POST',
                    success: function(data) {
                        $(".loader").hide();
                        console.log(data.error);
                        if(data.error){
                            Toastify({
                                text: data.message,
                                duration: 3000,
                                newWindow: true,
                                close: true,
                                gravity: "top", // `top` or `bottom`
                                position: "right", // `left`, `center` or `right`
                                stopOnFocus: true, // Prevents dismissing of toast on hover
                                style: {
                                    background: "linear-gradient(to right, #ff0000, #96c93d)",
                                },
                                onClick: function(){} // Callback after click
                            }).showToast();

                        }else{
                            Toastify({
                                text: data.message,
                                duration: 3000,
                                newWindow: true,
                                close: true,
                                gravity: "top", // `top` or `bottom`
                                position: "right", // `left`, `center` or `right`
                                stopOnFocus: true, // Prevents dismissing of toast on hover
                                style: {
                                    background: "linear-gradient(to right, #00b09b, #96c93d)",
                                },
                                onClick: function(){} // Callback after click
                            }).showToast();

                            window.location.href = data.redirect;
                        }


                    }
                });
            }else{
                $(".loader").hide();
                Toastify({
                        text: "Enter correct otp",
                        duration: 3000,
                        newWindow: true,
                        close: true,
                        gravity: "top", // `top` or `bottom`
                        position: "right", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #ff0000, #96c93d)",
                        },
                        onClick: function(){} // Callback after click
                    }).showToast();

            }

        })

    });
</script>
  @endsection
